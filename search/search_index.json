{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Uniswap V3 Volatility Oracle Docs \u00b6 Why build a Decentralized Volatility Oracle? \u00b6 Although, decentralization brings the obvious and much talked about removal of centralization risk while building oracles. I would argue that decentralization adds another benefit i.e. scalability . Volatility Oracles built using UniV3 will be available for every token pair. This means that any new token or structured product can start integrating with the volatility Oracles from Day 1. How it works? \u00b6 The contract stores accumulators which help in calculating Time Weighted Standard Deviation of ticks aka volatility for a UniV3 Pool. The pool already calculates accumulators to enable calculation of TWAP price by storing the tickCumulative this contract stores tickSquareCumulative which helps in calculating the volatility. More details can be found in the technical page .","title":"Home"},{"location":"#uniswap-v3-volatility-oracle-docs","text":"","title":"Uniswap V3 Volatility Oracle Docs"},{"location":"#why-build-a-decentralized-volatility-oracle","text":"Although, decentralization brings the obvious and much talked about removal of centralization risk while building oracles. I would argue that decentralization adds another benefit i.e. scalability . Volatility Oracles built using UniV3 will be available for every token pair. This means that any new token or structured product can start integrating with the volatility Oracles from Day 1.","title":"Why build a Decentralized Volatility Oracle?"},{"location":"#how-it-works","text":"The contract stores accumulators which help in calculating Time Weighted Standard Deviation of ticks aka volatility for a UniV3 Pool. The pool already calculates accumulators to enable calculation of TWAP price by storing the tickCumulative this contract stores tickSquareCumulative which helps in calculating the volatility. More details can be found in the technical page .","title":"How it works?"},{"location":"development/","text":"Usage \u00b6 Pre Requisites \u00b6 Before being able to run any command, you need to create a .env file and set a BIP-39 compatible mnemonic as an environment variable. You can follow the example in .env.example . Then, proceed with installing dependencies: $ yarn install Compile \u00b6 Compile the smart contracts with Hardhat: $ yarn compile TypeChain \u00b6 Compile the smart contracts and generate TypeChain bindings: $ yarn typechain Test \u00b6 Run the tests with Hardhat: $ yarn test Coverage \u00b6 Generate the code coverage report: $ yarn coverage Report Gas \u00b6 See the gas usage per unit test and average gas per method call: $ REPORT_GAS=true yarn test Clean \u00b6 Delete the smart contract artifacts, the coverage reports and the Hardhat cache: $ yarn clean","title":"Development"},{"location":"development/#usage","text":"","title":"Usage"},{"location":"development/#pre-requisites","text":"Before being able to run any command, you need to create a .env file and set a BIP-39 compatible mnemonic as an environment variable. You can follow the example in .env.example . Then, proceed with installing dependencies: $ yarn install","title":"Pre Requisites"},{"location":"development/#compile","text":"Compile the smart contracts with Hardhat: $ yarn compile","title":"Compile"},{"location":"development/#typechain","text":"Compile the smart contracts and generate TypeChain bindings: $ yarn typechain","title":"TypeChain"},{"location":"development/#test","text":"Run the tests with Hardhat: $ yarn test","title":"Test"},{"location":"development/#coverage","text":"Generate the code coverage report: $ yarn coverage","title":"Coverage"},{"location":"development/#report-gas","text":"See the gas usage per unit test and average gas per method call: $ REPORT_GAS=true yarn test","title":"Report Gas"},{"location":"development/#clean","text":"Delete the smart contract artifacts, the coverage reports and the Hardhat cache: $ yarn clean","title":"Clean"},{"location":"technical/","text":"Time weighted standard deviation \u00b6 Technical derivations \u00b6 We define and derive two methods for calculating Time Weighted Standard Deviation of Price Tick of a Uniswap v3 pair. This Standard deviation can be treated as a proxy for historical volatility between the two tokens. Key Definitions: \\(t_{ij}\\) : Time difference between two time stamps \\(t_i\\) and \\(t_j\\) \\(p_{ij}\\) : Price tick (as defined by UniV3 whitepaper) which remains constant between two time stamps \\(t_i\\) and \\(t_j\\) , i.e. remains constant for a total time period of \\(t_{ij}\\) \\(\\Delta t\\) : Total time between the start and end of the mean and variance calculation \\(\\bar{p}\\) : Time weighted Mean value of the price ticks in \\(\\Delta t\\) time period \\(s^2\\) : Time weighted Variance of the prices in time period Time Weighted Mean value \u00b6 The mean value of price ticks is \\[ \\bar{p} = \\frac{\\sum p_{ij}}{\\sum t} \\] The prices are actually constant between the time periods of \\(t_{ij}\\) so we can rewrite the above equation as: \\[ \\bar{p} = \\frac{\\sum t_{ij} p_{ij}}{\\Delta t} \\] Time Weighted Variance \u00b6 We can write the variance of the price tick between the preferred time period as: \\[ s^2 = \\frac{\\sum (p_{ij} - \\bar{p})^2}{\\sum t} \\] \\[ s^2 = \\frac{\\sum t_{ij} (p_{ij} - \\bar{p})^2}{\\Delta t } \\] \\[ s^2 = \\frac{\\sum t_{ij} (p_{ij}^2 - 2p_{ij}\\bar{p} + \\bar{p}^2)}{\\Delta t } \\] \\[ s^2 = \\frac{\\sum t_{ij} p_{ij}^2 - 2\\bar{p}\\sum t_{ij} p_{ij} + \\bar{p}^2 \\sum t_{ij}}{\\Delta t} \\] \\[ s^2 = \\frac{\\sum t_{ij} p_{ij}^2 - 2\\Delta t \\bar{p}^2 + \\Delta t\\bar{p}^2 }{\\Delta t} \\] \\[ s^2 = \\frac{\\sum t_{ij} p_{ij}^2 - \\Delta t \\bar{p}^2 }{\\Delta t} \\] The above formla for variance is numerically unstable when the standard deviation is very close to the mean value. Welford presented a more stable method for calculating the variance, we present the key formulas for that below. Welford Time Weighted Variance \u00b6 To calculate time weighted mean and variance we can also defer to welford method. Welford method defines an online method to calculate the variance, i.e. variance values are build based on the last mean and variance calculation. Key definitions \\(\\Delta t_{0,N}\\) : Time period between time \\(t_0\\) and \\(t_N\\) \\(\\bar{p}_{0,N}\\) : Time weighted Mean value of the price ticks in between time \\(t_0\\) and \\(t_N\\) time period \\(s^2_{0,N}\\) : Time weighted Variance of the prices ticks in between time \\(t_0\\) and \\(t_N\\) time period Time Weighted Mean value \u00b6 \\[ \\bar{p}_{0,N} = \\bar{p}_{0,N-1} + \\frac{\\Delta t_{N,N-1} \\times p_{N,N-1}}{\\Delta t_{0,N}} \\] The above formula lets us update the current value of mean based on the last value of mean, and new price tick between time \\(t_N\\) and \\(t_{N-1}\\) Welford defines \\(M\\) as: \\[ s^2 = \\frac{M}{\\Delta t} \\] \\[ M_{0,N} = M_{0,N-1} + \\Delta t_{N,N-1} (p_{N,N-1} - \\bar{p_{0,N-1}}) \\times (p_{N,N-1} - \\bar{p_{0,N}}) \\] One limitation for the welford formulation is that we need to know the mean values or time period of the variance calculation before. This means if we want to implement welford method we need to have one contract per time period.","title":"Technical"},{"location":"technical/#time-weighted-standard-deviation","text":"","title":"Time weighted standard deviation"},{"location":"technical/#technical-derivations","text":"We define and derive two methods for calculating Time Weighted Standard Deviation of Price Tick of a Uniswap v3 pair. This Standard deviation can be treated as a proxy for historical volatility between the two tokens. Key Definitions: \\(t_{ij}\\) : Time difference between two time stamps \\(t_i\\) and \\(t_j\\) \\(p_{ij}\\) : Price tick (as defined by UniV3 whitepaper) which remains constant between two time stamps \\(t_i\\) and \\(t_j\\) , i.e. remains constant for a total time period of \\(t_{ij}\\) \\(\\Delta t\\) : Total time between the start and end of the mean and variance calculation \\(\\bar{p}\\) : Time weighted Mean value of the price ticks in \\(\\Delta t\\) time period \\(s^2\\) : Time weighted Variance of the prices in time period","title":"Technical derivations"},{"location":"technical/#time-weighted-mean-value","text":"The mean value of price ticks is \\[ \\bar{p} = \\frac{\\sum p_{ij}}{\\sum t} \\] The prices are actually constant between the time periods of \\(t_{ij}\\) so we can rewrite the above equation as: \\[ \\bar{p} = \\frac{\\sum t_{ij} p_{ij}}{\\Delta t} \\]","title":"Time Weighted Mean value"},{"location":"technical/#time-weighted-variance","text":"We can write the variance of the price tick between the preferred time period as: \\[ s^2 = \\frac{\\sum (p_{ij} - \\bar{p})^2}{\\sum t} \\] \\[ s^2 = \\frac{\\sum t_{ij} (p_{ij} - \\bar{p})^2}{\\Delta t } \\] \\[ s^2 = \\frac{\\sum t_{ij} (p_{ij}^2 - 2p_{ij}\\bar{p} + \\bar{p}^2)}{\\Delta t } \\] \\[ s^2 = \\frac{\\sum t_{ij} p_{ij}^2 - 2\\bar{p}\\sum t_{ij} p_{ij} + \\bar{p}^2 \\sum t_{ij}}{\\Delta t} \\] \\[ s^2 = \\frac{\\sum t_{ij} p_{ij}^2 - 2\\Delta t \\bar{p}^2 + \\Delta t\\bar{p}^2 }{\\Delta t} \\] \\[ s^2 = \\frac{\\sum t_{ij} p_{ij}^2 - \\Delta t \\bar{p}^2 }{\\Delta t} \\] The above formla for variance is numerically unstable when the standard deviation is very close to the mean value. Welford presented a more stable method for calculating the variance, we present the key formulas for that below.","title":"Time Weighted Variance"},{"location":"technical/#welford-time-weighted-variance","text":"To calculate time weighted mean and variance we can also defer to welford method. Welford method defines an online method to calculate the variance, i.e. variance values are build based on the last mean and variance calculation. Key definitions \\(\\Delta t_{0,N}\\) : Time period between time \\(t_0\\) and \\(t_N\\) \\(\\bar{p}_{0,N}\\) : Time weighted Mean value of the price ticks in between time \\(t_0\\) and \\(t_N\\) time period \\(s^2_{0,N}\\) : Time weighted Variance of the prices ticks in between time \\(t_0\\) and \\(t_N\\) time period","title":"Welford Time Weighted Variance"},{"location":"technical/#time-weighted-mean-value_1","text":"\\[ \\bar{p}_{0,N} = \\bar{p}_{0,N-1} + \\frac{\\Delta t_{N,N-1} \\times p_{N,N-1}}{\\Delta t_{0,N}} \\] The above formula lets us update the current value of mean based on the last value of mean, and new price tick between time \\(t_N\\) and \\(t_{N-1}\\) Welford defines \\(M\\) as: \\[ s^2 = \\frac{M}{\\Delta t} \\] \\[ M_{0,N} = M_{0,N-1} + \\Delta t_{N,N-1} (p_{N,N-1} - \\bar{p_{0,N-1}}) \\times (p_{N,N-1} - \\bar{p_{0,N}}) \\] One limitation for the welford formulation is that we need to know the mean values or time period of the variance calculation before. This means if we want to implement welford method we need to have one contract per time period.","title":"Time Weighted Mean value"}]}